#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

#include <behaviors/rgbled_widget.dtsi>  // needed to use the behaviors
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shifttab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        doublequotation {
            bindings = <&kp AT_SIGN>;
            key-positions = <16 17>;
        };

        quote {
            bindings = <&kp AMPERSAND>;
            key-positions = <17 18>;
        };

        underbar {
            bindings = <&kp LS(INTERNATIONAL_1)>;
            key-positions = <18 19>;
        };

        ctrlhome {
            bindings = <&kp LC(HOME)>;
            key-positions = <1 2>;
        };

        ctrlend {
            bindings = <&kp LC(END)>;
            key-positions = <2 3>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        hold_tap_and_release: hold_tap_and_release {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kt MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER &macro_param_1to1 &kt MACRO_PLACEHOLDER>;
            label = "HOLD_TAP_AND_RELEASE";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R                        &kp T                                     &kp Y        &kp U                     &kp I          &kp O          &kp P
&kp A      &kp S         &kp D         &kp F                        &kp G                                     &kp H        &kp J                     &kp K          &kp L          &kp MINUS
&kp Z      &kp X         &kp C         &kp V                        &kp B        &mt LEFT_SHIFT SINGLE_QUOTE  &kp N        &kp M                     &kp COMMA      &kp PERIOD     &mt LEFT_CONTROL SLASH
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &lt_to_layer_0 3 LANGUAGE_2  &lt 2 SPACE  &lt_to_layer_0 6 LANGUAGE_1  &lt 1 ENTER  &mt LEFT_SHIFT SEMICOLON  &kp BACKSPACE  &lt 4 AT_SIGN  &kp DELETE
            >;
        };

        NUM+Symbol {
            bindings = <
&kp MINUS             &kp N7  &kp N8  &kp N9  &kp PLUS                &kp EQUAL          &kp CARET         &kp PLUS         &kp ASTERISK     &kp LEFT_PARENTHESIS
&kp N0                &kp N4  &kp N5  &kp N6  &kp LS(DQT)             &kp EXCLAMATION    &kp LEFT_BRACKET  &kp POUND        &kp DOLLAR       &kp PERCENT
&mt LEFT_SHIFT SLASH  &kp N1  &kp N2  &kp N3  &kp DOT      &kp UNDER  &kp RIGHT_BRACKET  &kp BACKSLASH     &kt RIGHT_BRACE  &kp PIPE         &mt LCTRL INTERNATIONAL_1
&kp RBKT              &trans  &trans  &trans  &trans       &trans     &kp ENTER          &kp LEFT_BRACE    &trans           &lt 2 LS(LG(S))  &kp LS(INTERNATIONAL_3)
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        mouse {
            bindings = <
&kp ESCAPE  &kp LC(LS(TAB))  &kp UP     &kp LC(TAB)  &trans             &kp F5             &hold_tap_and_release LEFT_GUI LEFT_ARROW  &hold_tap_and_release LEFT_GUI RIGHT_ARROW  &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))
&kp HOME    &kp LEFT         &kp DOWN   &kp RIGHT    &kp END            &kp LC(F)          &mkp MB1                                   &kp LG(TAB)                                 &mkp MB2          &kp F7
&kp LC(Z)   &kp LC(X)        &kp LC(C)  &kp LC(V)    &kp LC(A)  &trans  &kp LC(PAGE_DOWN)  &mkp MB4                                   &kp PAGE_DOWN                               &mkp MB5          &kp LC(LS(T))
&trans      &trans           &trans     &trans       &trans     &trans  &trans             &kp LG(T)                                  &trans                                      &trans            &kp END
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Scroll_Layer {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5           &kp PLUS      &kp MINUS   &kp NUMBER_7   &kp NUMBER_8   &kp NUMBER_9
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10          &kp EQUAL     &kp COLON   &kp N4         &kp N5         &kp N6
&kp F11  &kp F12  &trans  &trans  &trans   &trans  &kp ASTERISK  &kp SLASH   &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3
&trans   &trans   &trans  &trans  &trans   &trans  &kp ENTER     &kp DOLLAR  &kp BACKSPACE  &kp AMPERSAND  &kp N0
            >;
        };

        Setting_Layer {
            bindings = <
&studio_unlock  &kp LA(LC(LG(N2)))  &kp LA(LC(LG(N3)))  &kp LA(LC(LG(N4)))  &kp LA(LC(LG(N5)))           &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans          &kp LC(N4)          &kp LC(N5)          &kp LC(N6)          &trans                       &trans        &trans          &trans        &trans        &trans
&trans          &kp LC(N1)          &kp LC(N2)          &kp LC(N3)          &trans              &kt INS  &ind_bat      &trans          &bootloader   &trans        &bt BT_CLR
&trans          &trans              &trans              &trans              &trans              &trans   &bootloader   &studio_unlock  &sys_reset    &trans        &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        textselector {
            bindings = <
&kp LC(LS(LEFT))  &kp LC(LEFT)  &kp LS(UP)    &kp LC(RIGHT)  &kp LC(LS(RIGHT))          &trans        &trans       &trans  &trans  &kp LC(W)
&kp LS(HOME)      &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(RIGHT)  &kp LS(END)                &trans        &trans       &trans  &trans  &kp LG(UP)
&trans            &trans        &trans        &trans         &trans             &trans  &kp LC(HOME)  &trans       &trans  &trans  &kp LG(DOWN)
&trans            &trans        &trans        &trans         &trans             &trans  &trans        &kp LC(END)  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        LAYER_6 {
            bindings = <
&trans  &kp LG(N7)  &kp LG(E)   &trans      &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &trans          &trans        &trans        &trans        &trans        &trans
&trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &trans  &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans      &trans      &trans      &trans  &trans  &trans        &trans        &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        textselector {
            if-layers = <1 2>;
            then-layer = <5>;
        };
    };
};
